第六章 树和二叉树
6.33	未完成（需要顺序存储结构）
6.34	未完成（需要顺序存储结构）
6.35	未完成（需要顺序存储结构）
6.36已完成（判断是否相似）
6.37已完成（非递归先序遍历）
6.38已完成（非递归后序遍历）
6.39	意义不大（使用parent域并记录访问情况，不使用栈的非递归后序遍历）
6.40已完成（使用parent域，不使用栈的非递归中序遍历）
6.41已完成（输出先序序列第k个结点的值，相当于已完成）
6.42已完成（叶子结点数量）
6.43已完成（交换所有左右子树）
6.44已完成（某个结点的子树深度）
6.45已完成（删去某个结点的子树，类似析构函数）
6.46已完成（复制二叉树）
6.47已完成（层序遍历二叉树）
6.48已完成（最小公共祖先）
6.49已完成（是否为完全二叉树）
6.50	理论上无法完成（使用三元组序列创建二叉树，不能有重复元素）
6.51已完成（输出算术表达式）
6.52已完成（繁茂度=各层最大结点数*深度）
6.53已完成（最长路径）
6.54	未完成（需要顺序存储结构）
6.55	意义不大（每个结点的子孙数量，后序遍历即可）
6.56	意义不大（先序线索二叉树查找后继）
6.57	意义不大（后序线索二叉树查找后继）
6.58	意义不大（在中序线索二叉树中插入一棵树，并保持线索特性）
6.59已完成（输出树中所有的边，先序遍历二叉树，在入栈的时候输出即可。不需要单独完成）
6.60已完成（计算树的叶子个数）
6.61已完成（树的度）
6.62已完成（树的深度）
6.63	未完成（需要孩子链表）
6.64	未完成（需要双亲表）
6.65	理论上无法完成（使用先序序列和中序序列创建二叉树）
6.66	未完成（需要双亲表）
6.67	理论上无法完成（使用二元组序列创建树，不能有重复元素）
6.68	未完成（输入层序序列和每个结点的度，创建树，注意不是二叉树或森林）
6.69已完成（树状打印二叉树）
6.70	未完成（使用()，#和逗号创建二叉树）
6.71已完成（先序序列打印二叉树）
6.72	未完成（需要孩子链表）
6.73	未完成（需要广义表）
6.74	未完成（需要广义表）
6.75	未完成（需要广义表）
6.76	未完成（需要广义表）